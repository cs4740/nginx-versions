name: 01-ghcr-push

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cs4740/nginx-versions
  IMAGE_TAG: 1.${{ github.run_number }} # GITHUB_RUN_NUMBER }}

jobs:
  build-push-docker:

    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write

    steps:
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1

      # - name: Log into registry ${{ env.REGISTRY }}
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ secrets.GHCR_USERNAME }}
      #     password: ${{ secrets.GHCR_PAT }}
      #
      # Build and push Docker image with Buildx
      # - name: Build-Push container image
      #   id: build-and-push
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      #     labels: ${{ steps.meta.outputs.labels }}

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: nmagee
          password: ${{ secrets.QUAY_PASS }}

      # Build and push Docker image with Buildx
      - name: Build-Push container image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: quay.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}

      # Now update another repo so that ArgoCD can deploy the new version.
      - name: Remote Dispatch
        run: |
          curl -X POST https://api.github.com/repos/uvarc/uvarc-services/dispatches \
            -H 'Accept: application/vnd.github.everest-preview+json' \
            -H "Authorization: token ${{ secrets.GHCR_PAT }}" \
            --data '{"event_type": "${{ env.IMAGE_NAME }} update to ${{ env.IMAGE_TAG }}", "client_payload": { "service": "nginx-versions", "version": "${{ env.IMAGE_TAG }}" }}'
