name: 01-ghcr-push

on:
  push:
    branches: [ main ]
    tags:
      - '1.**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cs4740/nginx-versions
  # IMAGE_TAG: 1.${{ github.run_number }} # GITHUB_RUN_NUMBER }}
  IMAGE_TAG: ${{ github.ref_name }}
  SVC_NAME: nginxVersions

jobs:

  build-push-ghcr:

    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set version in page
        working-directory: ./nginx-versions
        run: |
          sed -i -e "s/ZZZ/$NEWVERSION/g" "index.html"

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Log into registry GHCR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: nmagee
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      # Now update another repo so that ArgoCD can deploy the new version.
      - name: Remote Dispatch
        run: |
          curl -X POST https://api.github.com/repos/uvarc/uvarc-services/dispatches \
            -H 'Accept: application/vnd.github.everest-preview+json' \
            -H "Authorization: token ${{ secrets.GHCR_PAT }}" \
            --data '{"event_type": "${{ env.IMAGE_NAME }} update to ${{ env.IMAGE_TAG }}", "client_payload": { "service": "${{ env.SVC_NAME }}", "version": "${{ env.IMAGE_TAG }}" }}'
